---
!<experiment>
name: "Load balancing hides a AWS EC2 restart for end users"
team: "ADM"
hypothesis:
  "An AWS EC2 restart is barely visible to end users and recovers afterward\
    \ again."
area: "Global"
environment: "Global"
lanes:
  - steps:
      - !<action>
        ignoreFailure: false
        parameters:
          url: "http://demo.steadybit.io/products"
          method: "GET"
          headers: []
          duration: "10s"
          statusCode: "200-299"
          readTimeout: "5s"
          successRate: 100
          maxConcurrent: 5
          connectTimeout: "5s"
          followRedirects: false
          requestsPerSecond: 10
        customLabel: "GIVEN: All HTTP-Calls are successful"
        actionType: "check:http"
        radius:
          list: []
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "10s"
      - !<action>
        ignoreFailure: false
        parameters:
          action: "reboot"
        customLabel: "WHEN: AWS EC2 is rebooted"
        actionType: "ec2-shutdown-attack"
        radius:
          targetType: "ec2-instance"
          predicate:
            operator: "AND"
            predicates:
              - key: "aws.account"
                operator: "EQUALS"
                values:
                  - "434059078104"
              - key: "aws-ec2.instance.name"
                operator: "CONTAINS"
                values:
                  - "prod-demo-ngroup"
          query: null
          maximum: 1
  - steps:
      - !<wait>
        ignoreFailure: false
        parameters:
          duration: "10s"
      - !<action>
        ignoreFailure: false
        parameters:
          url: "http://demo.steadybit.io/products"
          method: "GET"
          headers: []
          duration: "3m"
          statusCode: "200-299"
          readTimeout: "5s"
          successRate: 95
          maxConcurrent: 5
          connectTimeout: "5s"
          followRedirects: false
          requestsPerSecond: 10
        customLabel: "THEN: At least 95% of the HTTP calls are successful"
        actionType: "check:http"
        radius:
          list: []
      - !<action>
        ignoreFailure: false
        parameters:
          url: "http://demo.steadybit.io/products"
          method: "GET"
          headers: []
          duration: "30s"
          statusCode: "200-299"
          readTimeout: "5s"
          successRate: 100
          maxConcurrent: 5
          connectTimeout: "5s"
          followRedirects: false
          requestsPerSecond: 10
        customLabel: "THEN: All HTTP calls are successful again"
        actionType: "check:http"
        radius:
          list: []
